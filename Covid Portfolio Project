SELECT *
FROM `portfolioprojects-386315.Covid_Data.Covid_Deaths`
Where continent is not null 
order by 3,4;

--SELECT *
--FROM `portfolioprojects-386315.Covid_Data.Covid_Vacinations`
--order by 3,4;

-- SELECT Data that we are going to be using 

SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM `portfolioprojects-386315.Covid_Data.Covid_Deaths`
order by 1,2;

-- Total Case VS Total Deaths in the United States

SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathRate
FROM `portfolioprojects-386315.Covid_Data.Covid_Deaths`
where Location like '%States%' 
order by 1,2;

--looking at total cases vs population 
--shows what percentage of population got covid 

SELECT Location, date, total_cases, population, (total_cases/population)*100 as InfectionRate
FROM `portfolioprojects-386315.Covid_Data.Covid_Deaths`
where Location like '%States%' 
order by 1,2;

-- Looking at countries with highest infection rate compared to population for the United States

SELECT Location, Population, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected
From `portfolioprojects-386315.Covid_Data.Covid_Deaths`
Where location like '%states%'
Group by Location, Population
order by PercentPopulationInfected desc;

-- Showing Countries with Highest Death Count per Population 

SELECT Location, MAX(total_deaths) as TotalDeathCount
FROM `portfolioprojects-386315.Covid_Data.Covid_Deaths`
where continent is not null 
Group by Location
order by TotalDeathCount desc;

-- showing the continent with the highest death sount per population

Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From `portfolioprojects-386315.Covid_Data.Covid_Deaths`
--Where location like '%states%'
Where continent is not null 
Group by continent
order by TotalDeathCount desc;

-- Global Statistics 

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From `portfolioprojects-386315.Covid_Data.Covid_Deaths`
--Where location like '%states%'
where continent is not null 
--Group By date
order by 1,2;

-- looking at total population vs vacinnations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(Cast(vac.new_vaccinations as int)) OVER (partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM `portfolioprojects-386315.Covid_Data.Covid_Deaths` dea 
JOIN `portfolioprojects-386315.Covid_Data.Covid_Vacinations` vac
  on dea.location=vac.location 
  and dea.date = vac.date
WHERE dea.continent is not null
order by 2,3;

-- USE CTE 

With PopvsVac as 
(SELECT dea.continent as continent
  ,dea.location as location 
  ,dea.date as date
  ,dea.population as Population 
  ,vac.new_vaccinations as New_Vaccinations
  ,SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From `portfolioprojects-386315.Covid_Data.Covid_Vacinations` vac
Join `portfolioprojects-386315.Covid_Data.Covid_Deaths` dea
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
--order by 2,3
)
  
Select *, (RollingPeopleVaccinated/Population)*100 as VacinationRate
From PopvsVac;

-- Temp Table

CREATE TEMP TABLE PercentPopulationVaccinated AS (
  SELECT dea.continent as continent
  ,dea.location as location
  ,dea.date as date
  ,dea.population as Population
  ,vac.new_vaccinations as New_Vaccinations
  ,SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.Location Order by dea.Location, dea.Date) AS RollingPeopleVaccinated
  --, (RollingPeopleVaccinated/population)*100
From `portfolioprojects-386315.Covid_Data.Covid_Vacinations` vac
Join `portfolioprojects-386315.Covid_Data.Covid_Deaths` dea
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null
--order by 2,3
); 

Select *, (RollingPeopleVaccinated/Population)*100
From PercentPopulationVaccinated;


-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as (
  Select dea.continent as Continent
  ,dea.location as Location
  ,dea.Date as Date
  ,dea.population as population
  ,vac.new_vaccinations as New_Vaccinations
  ,SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.Location Order by dea.Location, dea.Date) AS RollingPeopleVaccinated
From `portfolioprojects-386315.Covid_Data.Covid_Vacinations` vac
Join `portfolioprojects-386315.Covid_Data.Covid_Deaths` dea
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
);
