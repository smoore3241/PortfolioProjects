'''
This code is created in conjunction with a guided project offered by the W3C on Coursera 
Task: figure out which employees are deserving of a bonus based on sales 
I first used an inner join to join the tables employees and orders to look at which employees 
were associated with which orders'''

SELECT lastname, firstname, orderid
FROM employees
inner join 
orders 
on employees.employeeid = orders.employeeid 
order by lastname, firstname 

''' Doing several inner joins between the "employees", "orders", "orderdetails" and "products" tables.
Doing so in order to further analyze which orders are correlated to which employees.
Also gathering information from "orderdetails" and "products" tables in order to caluclate 
the costs associated with each order and in that the amount of revenue generated by each employee
'''

SELECT lastname,firstname, orders.orderid, products.productid,quantity, price
FROM employees 
    inner join orders  
        on employees.employeeid = orders.employeeid
    inner join orderDetails
        on orders.orderid = orderDetails.orderid
    inner join products
        on orderDetails.productid = products.productid
order by lastname, firstname

-- calculating the amount of a sale

SELECT lastname,firstname, orders.orderid, products.productid,quantity, price, quantity * price as SalesAmt
FROM employees 
    inner join orders  
        on employees.employeeid = orders.employeeid
    inner join orderDetails
        on orders.orderid = orderDetails.orderid
    inner join products
        on orderDetails.productid = products.productid
order by lastname, firstname

-- calculating Sales Amount of each order 
''' using the sum function here with the group by order id function 
will consolidate any repeating order ids and add their quantity*price together 
to calculate the full sum of that specific order
this is crucial since orders will have multiple different products 
in them which have varying quanities and different prices'''

SELECT lastname,firstname, orders.orderid, products.productid,quantity, price sum(quantity*price) as SalesAmt
FROM employees 
    inner join orders  
        on employees.employeeid = orders.employeeid
    inner join orderDetails
        on orders.orderid = orderDetails.orderid
    inner join products
        on orderDetails.productid = products.productid
group by orders.orderid

-- sorting data by sales amount to determine which order had the highest sales amount
SELECT lastname,firstname, orders.orderid, products.productid,quantity, price, sum(quantity*price)as SalesAmt
FROM employees 
    inner join orders  
        on employees.employeeid = orders.employeeid
    inner join orderDetails
        on orders.orderid = orderDetails.orderid
    inner join products
        on orderDetails.productid = products.productid
group by orders.orderid
order by SalesAmt desc limit 5

-- filterting data with a having clause to look at only several orders

SELECT lastname,firstname, orders.orderid, products.productid,quantity, price, sum(quantity*price)as SalesAmt
FROM employees 
    inner join orders  
        on employees.employeeid = orders.employeeid
    inner join orderDetails
        on orders.orderid = orderDetails.orderid
    inner join products
        on orderDetails.productid = products.productid
group by orders.orderid
having orders.orderid in (10372,10424,10417,10324,10351)
order by SalesAmt desc limit 5

-- calculating the number of orders per customer

SELECT CustomerName, Count(OrderId) as number_of_orders
From Customers
inner join Orders
on Customers.CustomerID = Orders.CustomerID
group by Customers.CustomerID
order by number_of_orders DESC
